<!--
    Copyright 2019 Dennis Geller.

    This file is part of FancyCandles.

    FancyCandles is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    FancyCandles is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FancyCandles.  If not, see <https://www.gnu.org/licenses/>.-->

<UserControl
    x:Class="FancyCandles.CandleChart"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:FancyCandles"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    x:Name="thisUserControl"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <local:FirstCandleMaxIndexConverter x:Key="firstCandleMaxIndexConverter" />
        <local:TopBottomMarginConverter x:Key="topBottomMarginConverter" />

        <local:CrossPriceMarginConverter x:Key="crossPriceMarginConverter" />
        <local:CrossPriceValueConverter x:Key="crossPriceValueConverter" />
        <local:CrossVolumeConverter x:Key="crossVolumeConverter" />

        <local:IntRange_Start_i_Converter x:Key="intRange_Start_i_Converter" />
        <local:IntRange_Count_Converter x:Key="intRange_Count_Converter" />

        <local:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <local:NotBoolToVisibilityConverter x:Key="notBoolToVisibilityConverter" />
        <local:SquareBoolToVisibilityConverter x:Key="squareBoolToVisibilityConverter" />
        <local:VerticalCrossLineVisibilityConverter x:Key="verticalCrossLineVisibilityConverter" />
        <local:IntRangeToPointConverter x:Key="intRangeToPointConverter" />
        <local:CandleExtremumsToPriceExtremumsPointConverter x:Key="candleExtremumsToPriceExtremumsPointConverter" />
        <local:CandleDrawingParametersToPointConverter x:Key="candleDrawingParametersToPointConverter" />
        <local:BrushToColorConverter x:Key="brushToColorConverter" />
        <local:CandleDrawingParametersConverter x:Key="candleDrawingParametersConverter" />

        <Style x:Key="rowSpanPriceChartIfVolumeDisabled">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsVolumePanelVisible}" Value="False">
                    <Setter Property="Grid.RowSpan" Value="3" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Background="{Binding Path=Background, Mode=OneWay}" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="4*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="{Binding Path=TimeAxisHeight, Mode=OneWay}" />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="{Binding Path=PriceAxisWidth, Mode=OneWay}" />
        </Grid.ColumnDefinitions>
        <!--  ==============================================================================================================================================================  -->
        <!--  ГРАФИК ЦЕНЫ (Панель со свечками):  -->
        <!--  Подложка для графика цены, чтобы можно было ее подкрасить и нарисовать рамочку  -->
        <Border
            Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{Binding Path=ChartAreaBackground, Mode=OneWay}"
            BorderBrush="{Binding Path=AxisTickColor}"
            BorderThickness="1"
            RenderOptions.EdgeMode="Aliased"
            Style="{StaticResource rowSpanPriceChartIfVolumeDisabled}" />

        <!--  Обертка для ItemsControl нужна для определения размеров.  -->
        <Grid
            x:Name="priceChartContainer"
            Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Panel.ZIndex="2"
            MouseMove="OnMouseMoveInsidePriceChartContainer"
            MouseWheel="OnMouseWheel"
            SizeChanged="OnPanelCandlesContainerSizeChanged"
            Style="{StaticResource rowSpanPriceChartIfVolumeDisabled}">

            <!--  Нужно заполнить весь контейнер прозрачным содержимым, а иначе перекрестие не работает:  -->
            <Rectangle
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Fill="Transparent" />

            <local:PriceChartElement
                x:Name="priceChart"
                BearishCandleFill="{Binding ElementName=thisUserControl, Path=BearishCandleFill, Mode=OneWay}"
                BearishCandleStroke="{Binding ElementName=thisUserControl, Path=BearishCandleStroke, Mode=OneWay}"
                BullishCandleFill="{Binding ElementName=thisUserControl, Path=BullishCandleFill, Mode=OneWay}"
                BullishCandleStroke="{Binding ElementName=thisUserControl, Path=BullishCandleStroke, Mode=OneWay}"
                CandlesSource="{Binding ElementName=thisUserControl, Path=CandlesSource, Mode=OneWay}"
                RenderOptions.BitmapScalingMode="NearestNeighbor"
                RenderOptions.EdgeMode="Aliased"
                ToolTipService.Placement="Relative"
                ToolTipService.PlacementTarget="{Binding ElementName=priceChartContainer, Path=., Mode=OneWay}"
                VisibleCandlesExtremums="{Binding ElementName=thisUserControl, Path=VisibleCandlesExtremums, Mode=OneWay}"
                VisibleCandlesRange="{Binding ElementName=thisUserControl, Path=VisibleCandlesRange, Mode=OneWay}">
                <local:PriceChartElement.CandleWidthAndGap>
                    <MultiBinding Converter="{StaticResource candleDrawingParametersConverter}">
                        <Binding
                            ElementName="thisUserControl"
                            Mode="OneWay"
                            Path="CandleWidth" />
                        <Binding
                            ElementName="thisUserControl"
                            Mode="OneWay"
                            Path="CandleGap" />
                    </MultiBinding>
                </local:PriceChartElement.CandleWidthAndGap>
                <local:PriceChartElement.Margin>
                    <MultiBinding Converter="{StaticResource topBottomMarginConverter}">
                        <Binding
                            ElementName="thisUserControl"
                            Mode="OneWay"
                            Path="PriceChartTopMargin" />
                        <Binding
                            ElementName="thisUserControl"
                            Mode="OneWay"
                            Path="PriceChartBottomMargin" />
                    </MultiBinding>
                </local:PriceChartElement.Margin>
            </local:PriceChartElement>

            <!--  Легенда  -->
            <TextBlock
                Margin="{Binding LegendMargin, Mode=OneWay}"
                HorizontalAlignment="{Binding LegendHorizontalAlignment, Mode=OneWay}"
                VerticalAlignment="{Binding LegendVerticalAlignment, Mode=OneWay}"
                FontFamily="{Binding LegendFontFamily, Mode=OneWay}"
                FontSize="{Binding LegendFontSize, Mode=OneWay}"
                FontStyle="{Binding LegendFontStyle, Mode=OneWay}"
                FontWeight="{Binding LegendFontWeight, Mode=OneWay}"
                Foreground="{Binding LegendForeground, Mode=OneWay}"
                IsHitTestVisible="False"
                Text="{Binding LegendText, Mode=OneWay}"
                TextAlignment="Center" />

            <!--  Горизонтальная линия перекрестия:  -->
            <Line
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                X1="0"
                X2="{Binding ElementName=priceChartContainer, Path=ActualWidth, Mode=OneWay}"
                Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}"
                Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                        <Binding Mode="OneWay" Path="IsCrossLinesVisible" />
                        <Binding
                            ElementName="priceChartContainer"
                            Mode="OneWay"
                            Path="IsMouseOver" />
                    </MultiBinding>
                </Line.Visibility>
            </Line>

            <!--  Вертикальная линия перекрестия:  -->
            <Line
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                X1="{Binding Path=CurrentMousePosition.X, Mode=OneWay}"
                X2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=X1, Mode=OneWay}"
                Y1="0"
                Y2="{Binding ElementName=priceChartContainer, Path=ActualHeight, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource verticalCrossLineVisibilityConverter}">
                        <Binding Mode="OneWay" Path="IsCrossLinesVisible" />
                        <Binding
                            ElementName="priceChartContainer"
                            Mode="OneWay"
                            Path="IsMouseOver" />
                        <Binding
                            ElementName="volumeHistogramContainer"
                            Mode="OneWay"
                            Path="IsMouseOver" />
                    </MultiBinding>
                </Line.Visibility>
            </Line>

        </Grid>
        <!--  ==============================================================================================================================================================  -->
        <!--  Разделитель между графиком цены и диаграммой объема:  -->
        <GridSplitter
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Height="3"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            ShowsPreview="False"
            Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}" />
        <!--  ==============================================================================================================================================================  -->
        <!--  ДИАГРАММА V:  -->
        <!--  Подложка для диаграммы объемов, чтобы можно было ее подкрасить и нарисовать рамочку  -->
        <Border
            Grid.Row="2"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{Binding Path=ChartAreaBackground, Mode=OneWay}"
            BorderBrush="{Binding Path=AxisTickColor}"
            BorderThickness="1"
            RenderOptions.EdgeMode="Aliased"
            Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}" />

        <!--  Обертка для ItemsControl нужна для определения размеров.  -->
        <Grid
            x:Name="volumeHistogramContainer"
            Grid.Row="2"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Panel.ZIndex="2"
            MouseMove="OnMouseMoveInsideVolumeHistogramContainer"
            MouseWheel="OnMouseWheel"
            Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}">

            <!--  Нужно заполнить весь контейнер прозрачным содержимым, а иначе перекрестие не работает:  -->
            <Rectangle
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Fill="Transparent" />

            <local:VolumeChartElement
                BearishBarFill="{Binding ElementName=thisUserControl, Path=BearishVolumeBarFill, Mode=OneWay}"
                BullishBarFill="{Binding ElementName=thisUserControl, Path=BullishVolumeBarFill, Mode=OneWay}"
                CandlesSource="{Binding ElementName=thisUserControl, Path=CandlesSource, Mode=OneWay}"
                RenderOptions.EdgeMode="Aliased"
                ToolTipService.Placement="Relative"
                ToolTipService.PlacementTarget="{Binding ElementName=volumeHistogramContainer, Path=., Mode=OneWay}"
                VisibleCandlesExtremums="{Binding ElementName=thisUserControl, Path=VisibleCandlesExtremums, Mode=OneWay}"
                VisibleCandlesRange="{Binding ElementName=thisUserControl, Path=VisibleCandlesRange, Mode=OneWay}">
                <local:VolumeChartElement.CandleWidthAndGap>
                    <MultiBinding Converter="{StaticResource candleDrawingParametersConverter}">
                        <Binding
                            ElementName="thisUserControl"
                            Mode="OneWay"
                            Path="CandleWidth" />
                        <Binding
                            ElementName="thisUserControl"
                            Mode="OneWay"
                            Path="CandleGap" />
                    </MultiBinding>
                </local:VolumeChartElement.CandleWidthAndGap>
                <local:VolumeChartElement.Margin>
                    <MultiBinding Converter="{StaticResource topBottomMarginConverter}">
                        <Binding
                            ElementName="thisUserControl"
                            Mode="OneWay"
                            Path="PriceChartTopMargin" />
                        <Binding
                            ElementName="thisUserControl"
                            Mode="OneWay"
                            Path="PriceChartBottomMargin" />
                    </MultiBinding>
                </local:VolumeChartElement.Margin>
            </local:VolumeChartElement>

            <!--  Горизонтальная линия перекрестия:  -->
            <Line
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                X1="0"
                X2="{Binding ElementName=volumeHistogramContainer, Path=ActualWidth, Mode=OneWay}"
                Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}"
                Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                        <Binding Mode="OneWay" Path="IsCrossLinesVisible" />
                        <Binding
                            ElementName="volumeHistogramContainer"
                            Mode="OneWay"
                            Path="IsMouseOver" />
                    </MultiBinding>
                </Line.Visibility>
            </Line>

            <!--  Вертикальная линия перекрестия:  -->
            <Line
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                X1="{Binding Path=CurrentMousePosition.X, Mode=OneWay}"
                X2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=X1, Mode=OneWay}"
                Y1="0"
                Y2="{Binding ElementName=volumeHistogramContainer, Path=ActualHeight, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource verticalCrossLineVisibilityConverter}">
                        <Binding Mode="OneWay" Path="IsCrossLinesVisible" />
                        <Binding
                            ElementName="priceChartContainer"
                            Mode="OneWay"
                            Path="IsMouseOver" />
                        <Binding
                            ElementName="volumeHistogramContainer"
                            Mode="OneWay"
                            Path="IsMouseOver" />
                    </MultiBinding>
                </Line.Visibility>
            </Line>

        </Grid>
        <!--  ==============================================================================================================================================================  -->
        <!--  Вертикальная шкала с метками цены:  -->
        <local:PriceTicksElement
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            VerticalAlignment="Stretch"
            AxisTickColor="{Binding Path=AxisTickColor, Mode=OneWay}"
            ChartBottomMargin="{Binding Path=PriceChartBottomMargin, Mode=OneWay}"
            ChartTopMargin="{Binding Path=PriceChartTopMargin, Mode=OneWay}"
            GapBetweenTickLabels="{Binding Path=GapBetweenPriceTickLabels, Mode=OneWay}"
            GridlinesPen="{Binding Path=HorizontalGridlinesPen, Mode=OneWay}"
            IsGridlinesEnabled="{Binding Path=IsHorizontalGridlinesEnabled, Mode=OneWay}"
            NumberFormat="{Binding Path=PriceNumberFormat, Mode=OneWay}"
            PriceAxisWidth="{Binding Path=PriceAxisWidth, Mode=OneWay}"
            RenderOptions.EdgeMode="Aliased"
            Style="{StaticResource rowSpanPriceChartIfVolumeDisabled}"
            VisibleCandlesExtremums="{Binding Path=VisibleCandlesExtremums, Mode=OneWay}" />
        <!--  ==============================================================================================================================================================  -->
        <!--  Вертикальная шкала с метками объема:  -->
        <local:VolumeTicksElement
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            VerticalAlignment="Stretch"
            ChartBottomMargin="{Binding Path=VolumeHistogramBottomMargin, Mode=OneWay}"
            ChartTopMargin="{Binding Path=VolumeHistogramTopMargin, Mode=OneWay}"
            GapBetweenTickLabels="{Binding Path=GapBetweenPriceTickLabels, Mode=OneWay}"
            GridlinesPen="{Binding Path=HorizontalGridlinesPen, Mode=OneWay}"
            IsGridlinesEnabled="{Binding Path=IsHorizontalGridlinesEnabled, Mode=OneWay}"
            NumberFormat="{Binding Path=VolumeNumberFormat, Mode=OneWay}"
            PriceAxisWidth="{Binding Path=PriceAxisWidth, Mode=OneWay}"
            RenderOptions.EdgeMode="Aliased"
            Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}"
            VisibleCandlesExtremums="{Binding Path=VisibleCandlesExtremums, Mode=OneWay}" />
        <!--  ==============================================================================================================================================================  -->
        <!--  Горизонтальная шкала c метками времени:  -->
        <local:TimeTicksElement
            Grid.Row="0"
            Grid.RowSpan="4"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            CandlesSource="{Binding Path=CandlesSource, Mode=OneWay}"
            GridlinesPen="{Binding Path=VerticalGridlinesPen, Mode=OneWay}"
            HideMinorGridlines="{Binding Path=HideMinorVerticalGridlines, Mode=OneWay}"
            IsGridlinesEnabled="{Binding Path=IsVerticalGridlinesEnabled, Mode=OneWay}"
            RenderOptions.EdgeMode="Aliased"
            TimeAxisHeight="{Binding Path=TimeAxisHeight, Mode=OneWay}"
            TimeFrame="{Binding Path=TimeFrame, Mode=OneWay}"
            VisibleCandlesRange="{Binding Path=VisibleCandlesRange, Mode=OneWay}">
            <local:TimeTicksElement.CandleWidthAndGap>
                <MultiBinding Converter="{StaticResource candleDrawingParametersConverter}">
                    <Binding
                        ElementName="thisUserControl"
                        Mode="OneWay"
                        Path="CandleWidth" />
                    <Binding
                        ElementName="thisUserControl"
                        Mode="OneWay"
                        Path="CandleGap" />
                </MultiBinding>
            </local:TimeTicksElement.CandleWidthAndGap>
        </local:TimeTicksElement>

        <!--  Совпадает с расположением шкалы меток времени. Нужно для корректной работы колесика мыши в этой области. + Курсор перестает реагировать на текстовые метки времени.  -->
        <Grid
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="Transparent"
            MouseWheel="OnMouseWheel" />
        <!--  ==============================================================================================================================================================  -->
        <!--  Цена перекрестия для графика цены  -->
        <Border
            Grid.Row="0"
            Grid.Column="1"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Background="{Binding CrossPriceBackground, Mode=OneWay}"
            BorderBrush="{Binding CrossPriceForeground, Mode=OneWay}"
            BorderThickness="1"
            Style="{StaticResource rowSpanPriceChartIfVolumeDisabled}">

            <Border.Visibility>
                <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                    <Binding Mode="OneWay" Path="IsCrossPriceVisible" />
                    <Binding
                        ElementName="priceChartContainer"
                        Mode="OneWay"
                        Path="IsMouseOver" />
                </MultiBinding>
            </Border.Visibility>

            <Border.Margin>
                <MultiBinding Converter="{StaticResource crossPriceMarginConverter}">
                    <Binding Mode="OneWay" Path="CurrentMousePosition" />
                    <Binding Mode="OneWay" Path="PriceTickTextHeight" />
                </MultiBinding>
            </Border.Margin>

            <TextBlock Foreground="{Binding CrossPriceForeground, Mode=OneWay}">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource crossPriceValueConverter}">
                        <Binding Mode="OneWay" Path="CurrentMousePosition" />
                        <Binding
                            ElementName="priceChartContainer"
                            Mode="OneWay"
                            Path="ActualHeight" />
                        <Binding Mode="OneWay" Path="VisibleCandlesExtremums" />
                        <Binding Mode="OneWay" Path="PriceChartTopMargin" />
                        <Binding Mode="OneWay" Path="PriceChartBottomMargin" />
                        <Binding Mode="OneWay" Path="MaxNumberOfDigitsAfterPointInPrice" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </Border>

        <!--  Объем перекрестия для гистограммы объема  -->
        <Border
            Grid.Row="2"
            Grid.Column="1"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Background="{Binding CrossPriceBackground, Mode=OneWay}"
            BorderBrush="{Binding CrossPriceForeground, Mode=OneWay}"
            BorderThickness="1">

            <Border.Visibility>
                <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                    <Binding Mode="OneWay" Path="IsCrossPriceVisible" />
                    <Binding
                        ElementName="volumeHistogramContainer"
                        Mode="OneWay"
                        Path="IsMouseOver" />
                </MultiBinding>
            </Border.Visibility>

            <Border.Margin>
                <MultiBinding Converter="{StaticResource crossPriceMarginConverter}">
                    <Binding Mode="OneWay" Path="CurrentMousePosition" />
                    <Binding Mode="OneWay" Path="PriceTickTextHeight" />
                </MultiBinding>
            </Border.Margin>

            <TextBlock Foreground="{Binding CrossPriceForeground, Mode=OneWay}">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource crossVolumeConverter}">
                        <Binding Mode="OneWay" Path="CurrentMousePosition" />
                        <Binding
                            ElementName="volumeHistogramContainer"
                            Mode="OneWay"
                            Path="ActualHeight" />
                        <Binding Mode="OneWay" Path="VisibleCandlesExtremums" />
                        <Binding Mode="OneWay" Path="VolumeHistogramTopMargin" />
                        <Binding Mode="OneWay" Path="VolumeHistogramBottomMargin" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </Border>
        <!--  ==============================================================================================================================================================  -->
        <!--  Горизонтальный скроллер:  -->
        <ScrollBar
            Grid.Row="4"
            Grid.Column="0"
            Height="{Binding ElementName=thisUserControl, Path=ScrollBarHeight}"
            Margin="0,0,0,0"
            Background="{Binding ElementName=thisUserControl, Path=ScrollBarBackground}"
            Minimum="0"
            Orientation="Horizontal"
            SmallChange="1"
            ViewportSize="{Binding Path=VisibleCandlesRange, Converter={StaticResource intRange_Count_Converter}, Mode=OneWay}"
            Value="{Binding Path=VisibleCandlesRange, Converter={StaticResource intRange_Start_i_Converter}, Mode=TwoWay}">
            <ScrollBar.Maximum>
                <MultiBinding Converter="{StaticResource firstCandleMaxIndexConverter}">
                    <Binding Path="CandlesSource" />
                    <Binding Mode="OneWay" Path="VisibleCandlesRange" />
                </MultiBinding>
            </ScrollBar.Maximum>
        </ScrollBar>
        <!--  ==============================================================================================================================================================  -->
        <!--  Затемнитель на весь контрол для случая, когда IsEnabled=False :  -->
        <Rectangle
            Grid.Row="0"
            Grid.RowSpan="5"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Panel.ZIndex="3"
            Fill="{Binding Path=DisabledFill}"
            Visibility="{Binding Path=IsEnabled, Converter={StaticResource notBoolToVisibilityConverter}}" />
        <!--  ==============================================================================================================================================================  -->
    </Grid>
</UserControl>
